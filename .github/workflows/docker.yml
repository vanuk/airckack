name: Docker (git) push to DockerHub

on:
  push:
    branches:
      - 'master'
    paths-ignore:
      - '.devcontainer/**'
      - '.coverityignore'
      - '.github/workflows/gentoo.yml'
      - '.github/ISSUE_TEMPLATE/**'
      - '.github/workflows/almalinux.yml'
      - '.github/workflows/alpine.yml'
      - '.github/workflows/check-actions-updates.yml'
      - '.github/workflows/check-release-ready.yml'
      - '.github/workflows/codespell.yml'
      - '.github/workflows/coverity.yml'
      - '.github/workflows/devcontainer.yml'
      - '.github/workflows/docker-release.yml'
      - '.github/workflows/dragonflybsd.yml'
      - '.github/workflows/freebsd.yml'
      - '.github/workflows/gcc.yml'
      - '.github/workflows/irc.yml'
      - '.github/workflows/linux.yml'
      - '.github/workflows/linux-pcre.yml'
      - '.github/workflows/macos.yml'
      - '.github/workflows/manual.yml'
      - '.github/workflows/markdown-link.yml'
      - '.github/workflows/netbsd.yml'
      - '.github/workflows/openbsd.yml'
      - '.github/workflows/pvs-studio.yml'
      - '.github/workflows/scanbuild.yml'
      - '.github/workflows/style.yml'
      - '.github/workflows/windows.yml'
      - '.vscode/**'
      - 'apparmor/**'
      - 'contrib/**'
      - 'patches/**'
      - '.clang-format'
      - '.codespellrc'
      - '.editorconfig'
      - '.gitignore'
      - '.pre-commit-config.yaml'
      - 'AUTHORS'
      - 'ChangeLog'
      - 'Dockerfile.release'
      - 'INSTALLING'
      - 'LICENSE'
      - 'LICENSE.OpenSSL'
      - 'README'
      - 'README.md'
      - 'SECURITY.md'
      - 'centos_autotools.sh'
      - 'scripts/airmon-ng.freebsd'
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-22.04
    steps:
      - 
        name: Git Checkout
        uses: actions/checkout@v4
      - 
        name: Lint Dockerfile
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile
          verbose: true
          failure-threshold: error
      - 
        name: Lint Release Dockerfile
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: './Dockerfile.release'
          verbose: true
          failure-threshold: error
      -
        name: Shellcheck package install script
        uses: sudo-bot/action-shellcheck@latest
        with:
          cli-args: "docker_package_install.sh"

  x86:
    runs-on: ubuntu-22.04
    needs: lint
    steps:
      - 
        name: Git Checkout
        uses: actions/checkout@v4
      - 
        name: Shorten git revision
        uses: rlespinasse/shortify-git-revision@v1
        with:
          name: GITHUB_SHA
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push on linux/amd64
        uses: docker/build-push-action@v5
        #continue-on-error: true
        with:
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            aircrackng/git:latest
            aircrackng/git:${{ env.GITHUB_SHA_SHORT }}
      -
        name: Build and push on linux/386
        uses: docker/build-push-action@v5
        continue-on-error: true
        with:
          platforms: linux/386
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            aircrackng/git:latest
            aircrackng/git:${{ env.GITHUB_SHA_SHORT }}

  armv5-6:
    runs-on: ubuntu-22.04
    needs: lint
    steps:
      - 
        name: Git Checkout
        uses: actions/checkout@v4
      - 
        name: Shorten git revision
        uses: rlespinasse/shortify-git-revision@v1
        with:
          name: GITHUB_SHA
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push on linux/arm/v5
        uses: docker/build-push-action@v5
        continue-on-error: true
        with:
          platforms: linux/arm/v5
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            aircrackng/git:latest
            aircrackng/git:${{ env.GITHUB_SHA_SHORT }}
      -
        name: Build and push on linux/arm/v6
        uses: docker/build-push-action@v5
        continue-on-error: true
        with:
          platforms: linux/arm/v6
          build-args: IMAGE_BASE=alpine:3
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            aircrackng/git:latest
            aircrackng/git:${{ env.GITHUB_SHA_SHORT }}

  arm:
    runs-on: ubuntu-22.04
    needs: lint
    steps:
      - 
        name: Git Checkout
        uses: actions/checkout@v4
      - 
        name: Shorten git revision
        uses: rlespinasse/shortify-git-revision@v1
        with:
          name: GITHUB_SHA
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push on linux/arm/v7
        uses: docker/build-push-action@v5
        continue-on-error: true
        with:
          platforms: linux/arm/v7
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            aircrackng/git:latest
            aircrackng/git:${{ env.GITHUB_SHA_SHORT }}
      -
        name: Build and push on linux/arm64/v8
        uses: docker/build-push-action@v5
        continue-on-error: true
        with:
          platforms: linux/arm64/v8
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            aircrackng/git:latest
            aircrackng/git:${{ env.GITHUB_SHA_SHORT }}

  others:
    runs-on: ubuntu-22.04
    needs: lint
    steps:
      - 
        name: Git Checkout
        uses: actions/checkout@v4
      - 
        name: Shorten git revision
        uses: rlespinasse/shortify-git-revision@v1
        with:
          name: GITHUB_SHA
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push on linux/mips64le
        uses: docker/build-push-action@v5
        continue-on-error: true
        with:
          platforms: linux/mips64le
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            aircrackng/git:latest
            aircrackng/git:${{ env.GITHUB_SHA_SHORT }}
      -
        name: Build and push on linux/ppc64le
        uses: docker/build-push-action@v5
        continue-on-error: true
        with:
          platforms: linux/ppc64le
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            aircrackng/git:latest
            aircrackng/git:${{ env.GITHUB_SHA_SHORT }}
      -
        name: Build and push on linux/riscv64
        uses: docker/build-push-action@v5
        continue-on-error: true
        with:
          platforms: linux/riscv64
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            aircrackng/git:latest
            aircrackng/git:${{ env.GITHUB_SHA_SHORT }}
      -
        name: Build and push on linux/s390x
        uses: docker/build-push-action@v5
        continue-on-error: true
        with:
          platforms: linux/s390x
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            aircrackng/git:latest
            aircrackng/git:${{ env.GITHUB_SHA_SHORT }}