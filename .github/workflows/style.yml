name: "Style & Consistency"

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

  push:
    branches: [ master ]
    paths-ignore:
      - apparmor/**
      - contrib/**
      - manpages/**
      - patches/**
      - scripts/**
      - '.devcontainer/**'
      - '.coverityignore'
      - '.github/workflows/gentoo.yml'
      - '.github/ISSUE_TEMPLATE/**'
      - '.github/workflows/almalinux.yml'
      - '.github/workflows/alpine.yml'
      - '.github/workflows/check-actions-updates.yml'
      - '.github/workflows/check-release-ready.yml'
      - '.github/workflows/codespell.yml'
      - '.github/workflows/coverity.yml'
      - '.github/workflows/devcontainer.yml'
      - '.github/workflows/docker.yml'
      - '.github/workflows/docker-release.yml'
      - '.github/workflows/dragonflybsd.yml'
      - '.github/workflows/freebsd.yml'
      - '.github/workflows/gcc.yml'
      - '.github/workflows/irc.yml'
      - '.github/workflows/kali.yml'
      - '.github/workflows/linux.yml'
      - '.github/workflows/linux-pcre.yml'
      - '.github/workflows/macos.yml'
      - '.github/workflows/manual.yml'
      - '.github/workflows/markdown-link.yml'
      - '.github/workflows/netbsd.yml'
      - '.github/workflows/openbsd.yml'
      - '.github/workflows/pvs-studio.yml'
      - '.github/workflows/scanbuild.yml'
      - '.github/workflows/windows.yml'
      - '.vscode/**'
      - '.gitignore'
      - '.pre-commit-config.yaml'
      - 'AC_VERSION.in'
      - 'AUTHORS'
      - 'centos_autotools.sh'
      - 'ChangeLog'
      - 'docker_package_install.sh'
      - 'Dockerfile'
      - 'Dockerfile.release'
      - 'INSTALLING'
      - 'LICENSE'
      - 'LICENSE.OpenSSL'
      - 'README'
      - 'README.md'
      - 'SECURITY.md'

  pull_request:
    branches: [ master ]
    paths-ignore:
      - apparmor/**
      - contrib/**
      - manpages/**
      - patches/**
      - scripts/**
      - '.devcontainer/**'
      - '.coverityignore'
      - '.github/workflows/gentoo.yml'
      - '.github/ISSUE_TEMPLATE/**'
      - '.github/workflows/almalinux.yml'
      - '.github/workflows/alpine.yml'
      - '.github/workflows/check-actions-updates.yml'
      - '.github/workflows/check-release-ready.yml'
      - '.github/workflows/codespell.yml'
      - '.github/workflows/coverity.yml'
      - '.github/workflows/devcontainer.yml'
      - '.github/workflows/docker.yml'
      - '.github/workflows/docker-release.yml'
      - '.github/workflows/dragonflybsd.yml'
      - '.github/workflows/freebsd.yml'
      - '.github/workflows/gcc.yml'
      - '.github/workflows/irc.yml'
      - '.github/workflows/kali.yml'
      - '.github/workflows/linux.yml'
      - '.github/workflows/linux-pcre.yml'
      - '.github/workflows/macos.yml'
      - '.github/workflows/manual.yml'
      - '.github/workflows/markdown-link.yml'
      - '.github/workflows/netbsd.yml'
      - '.github/workflows/openbsd.yml'
      - '.github/workflows/pvs-studio.yml'
      - '.github/workflows/scanbuild.yml'
      - '.github/workflows/windows.yml'
      - '.vscode/**'
      - '.gitignore'
      - '.pre-commit-config.yaml'
      - 'AC_VERSION.in'
      - 'AUTHORS'
      - 'centos_autotools.sh'
      - 'ChangeLog'
      - 'docker_package_install.sh'
      - 'Dockerfile'
      - 'Dockerfile.release'
      - 'INSTALLING'
      - 'LICENSE'
      - 'LICENSE.OpenSSL'
      - 'README'
      - 'README.md'
      - 'SECURITY.md'

env:
  LANG: en_US.UTF-8
  TZ: UTC

jobs:
  clang_format:
    runs-on: ubuntu-22.04

    name: Clang-Format

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get install -y clang-format-12

      - name: Check source code formatting
        run: |
          echo "::group::Process all source files with clang-format"
          # check formatting matches clang-format-12. Since newer versions can
          # have changes in formatting even without any rule changes, we have
          # to fix on a single version.
          . ./build/clang_format_all.sh

          git clean -f
          echo "::endgroup::"

          # Print any diff here, so the error message below is the last thing
          git diff

          set -e && git diff --quiet || (
            echo "****************************************************";
            echo "*** The code is not clean against clang-format   ***";
            echo "*** Please run clang-format-12/13/14/15 and fix  ***";
            echo "*** the differences then rebase/squash them into ***";
            echo "*** the relevant commits. Do not add a commit    ***";
            echo "*** for just formatting fixes. Thanks!           ***";
            echo "****************************************************";
            exit 1;
          )
